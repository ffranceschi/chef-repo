#backend default {
# .host = "ec2-184-73-160-169.compute-1.amazonaws.com";
# .port = "http";
#}

include "director.vcl";
include "devicedetect.vcl";

sub vcl_recv {

    set req.backend = ikuna_director;

    if (! req.backend.healthy) {
       set req.grace = 5m;
    } else {
       set req.grace = 15s;
    }
	
#  if (req.http.host ~ "(?i)^(www.)?arizonadeportes.com") {
#   set req.http.Host = regsub(req.http.Host, ":80$", "");
#    set req.backend = default;
#  } 

#  if (req.http.host ~ "(?i)^(www.)?arizonadeportes.com") {
#    set req.http.host = "www.arizonadeportes.com";
#    set req.backend = default;
#  } elsif (req.http.host ~ "(?i)^demoefe.ikuna.com") {
#    set req.http.host = "demoefe.ikuna.com";
#    set req.backend = default;
#  } else {
#    error 404 "Unknown virtual host";
#  }

    #Mobile Devices Detect
    # Detect Mobile Devices, Redirect them to 750, which calls vcl_error to redirect url
    call devicedetect;

    if (req.http.host ~ "^(www\.)?telemundoatlanta\.com$") {
	    if (req.http.X-UA-Device ~ "^mobile" || req.http.X-UA-device ~ "^tablet") {
		error 750 "Moved Temporarily";
	    }
    }
   ##End of Mobile Devices Detect
	
    if (req.url ~ "\.(css|jpg|gif|jpeg|png|html)") {
        remove req.http.cookie;
    }

    if (req.restarts == 0) {
        if (req.http.x-forwarded-for) {
            set req.http.X-Forwarded-For =
                req.http.X-Forwarded-For + ", " + client.ip;
        } else {
            set req.http.X-Forwarded-For = client.ip;
        }
    }
    if (req.request != "GET" &&
      req.request != "HEAD" &&
      req.request != "PUT" &&
      req.request != "POST" &&
      req.request != "TRACE" &&
      req.request != "OPTIONS" &&
      req.request != "DELETE") {
        /* Non-RFC2616 or CONNECT which is weird. */
        return (pipe);
    }
    if (req.request != "GET" && req.request != "HEAD") {
        /* We only deal with GET and HEAD by default */
        return (pass);
    }
    if (req.http.Authorization || req.http.Cookie) {
        /* Not cacheable by default */
        return (pass);
    }
    return (lookup);
}

sub vcl_pipe {
    # Note that only the first request to the backend will have
    # X-Forwarded-For set.  If you use X-Forwarded-For and want to
    # have it set for all requests, make sure to have:
    # set bereq.http.connection = "close";
    # here.  It is not set by default as it might break some broken web
    # applications, like IIS with NTLM authentication.
    return (pipe);
}

sub vcl_pass {
    return (pass);
}

sub vcl_hash {
    hash_data(req.url);
    if (req.http.host) {
        hash_data(req.http.host);
    } else {
        hash_data(server.ip);
    }
    return (hash);
}

sub vcl_hit {
    return (deliver);
}

sub vcl_miss {
    return (fetch);
}

sub vcl_fetch {

    set beresp.grace = 30m;   

    if (req.url ~ "\.css$") {
                set beresp.ttl = 120s;
    }

    if (req.url ~ "\.js$") {
                set beresp.ttl = 120s;
    }

    if (req.url ~ "\.html$") {
                set beresp.ttl = 1d;
    }

    if (req.url ~ "\.htm$") {
                set beresp.ttl = 1d;
    }

    if (beresp.ttl < 10s) {
        /* If a ttl is set to 0 or less as per default TTL rules, so will obj.cacheable. You can overwrite
         * this, and you should if you are chaning from not caching to caching.
         */
        set beresp.ttl = 600s;
    }

    if (beresp.ttl <= 0s ||
        beresp.http.Set-Cookie ||
        beresp.http.Vary == "*") {
                /*
                 * Mark as "Hit-For-Pass" for the next 2 minutes
                 */
                set beresp.ttl = 120 s;
                return (hit_for_pass);
    }
    return (deliver);
}

sub vcl_deliver {
    return (deliver);
}

sub vcl_error {

    #Redirect URL for Mobile Devices
    if (obj.status == 750) {
        set obj.http.Location = "http://www.localwireless.com" + req.url;
        set obj.status = 302;
        #return(deliver);
    }
	
    set obj.http.Content-Type = "text/html; charset=utf-8";
    set obj.http.Retry-After = "5";
    synthetic {"
<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
  <head>
    <title>"} + obj.status + " " + obj.response + {"</title>
  </head>
  <body>
    <h1>Error "} + obj.status + " " + obj.response + {"</h1>
    <p>"} + obj.response + {"</p>
    <h3>Guru Meditation:</h3>
    <p>XID: "} + req.xid + {"</p>
    <hr>
    <p>Varnish cache server</p>
  </body>
</html>
"};
    return (deliver);
}

sub vcl_init {
        return (ok);
}

sub vcl_fini {
        return (ok);
}
